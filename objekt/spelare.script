local x_hastighet = 0
local rörelse_hastighet = 50
local riktning = 0


local falltid = 0

-- Hur snabbt ska vi falla?
local gravitation = 15

-- Våran nuvarande velocitet i y-ledden
local y_hastighet = 0

-- Hur snabbt ska vi hoppa?
local hopp_kraft = 550


function init(self)
	-- Detta gör så att spelaren kan ta emot input.
	msg.post('.', 'acquire_input_focus')
end


function update(self, dt)

	falltid = falltid + dt
	if falltid > 3 then
		msg.post('main:/loader', 'ladda_värld', {till='#gameover'})
	end

	-- Vi faller inte när vi hoppar
	if y_hastighet > 0 then
		falltid = 0
	end

	-- Friktionn, förklara linjär interpolation.
	x_hastighet = vmath.lerp(0.1, x_hastighet, 0)
	x_hastighet = x_hastighet + riktning * rörelse_hastighet


	-- Hämta vår position
	position = go.get_position()
	position.x = position.x + x_hastighet * dt

	if position.x < 0 then
		position.x = 500
	elseif position.x > 500 then
		position.x = 0
	end

	-- Applicera positionen till detta objekt.
	go.set_position(position)

	-- Genom att ange en url till ett objekt kan vi hämta ett annat objekts position.
	världen = go.get_position('världen')

	-- Applicera motsatta y_hastigheten på världen så den rör sig neråt när vi "rör" oss upp.
	världen.y = världen.y - (y_hastighet * dt)

	-- Sätt positionen av 'världen'-objektet till vektorn världen
	go.set_position(världen, 'världen')


	-- Gravitation
	y_hastighet = y_hastighet - (gravitation)
end

function on_message(self, message_id, message, sender)
	-- contact_point_response skickas när 2 kinematic collision objects kolliderar
	if message_id == hash('contact_point_response') then

		-- message-objektet innehåller data om kollisionen, t.ex. vilken grupp vi kolliderade med.
		if message.other_group == hash('plattform') then

			-- Vi måste falla för att kunna hoppa, vi ska kunna flyga upp igenom plattformarna men inte ner.
			if y_hastighet < 0 then

				-- Genom att sätta y_hastigheten till ett positivt värde "faller" vi uppåt, vilket är samma sak som att hoppa.
				y_hastighet = hopp_kraft

				msg.post('#hoppa', 'play_sound')
			end
		elseif message.other_group == hash('studsare') then
			-- Vi måste falla för att kunna hoppa, vi ska kunna flyga upp igenom plattformarna men inte ner.
			if y_hastighet < 0 then

				-- Genom att sätta y_hastigheten till ett positivt värde "faller" vi uppåt, vilket är samma sak som att hoppa.
				y_hastighet = hopp_kraft*3

				msg.post('#studsa', 'play_sound')
			end
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash('vänster') then
		if action.pressed then
			riktning = -1
		elseif action.released and riktning == -1 then
			riktning = 0
		end
	elseif action_id == hash('höger') then
		if action.pressed then
			riktning = 1
		elseif action.released and riktning == 1 then
			riktning = 0
		end
	end
end
