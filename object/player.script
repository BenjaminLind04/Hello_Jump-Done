local x_speed = 0 -- Hastighet i x led
local movement = 50 
local heading = 0

local fall = 0
local gravity = 15 -- Hur snabbt ska vi falla?
local y_speed = 0 -- Våran nuvarande velocitet i y-ledden
local jump = 550 -- Hur snabbt ska vi hoppa?


function init(self)
	-- Detta gör så att spelaren kan ta emot input.
	msg.post('.', 'acquire_input_focus')
end


function update(self, dt)

	fall = fall + dt
	if fall > 3 then
		msg.post('main:/loader', 'load_world', {to='#gameover'})
	end

	-- Vi faller inte när vi hoppar
	if y_speed > 0 then
		fall = 0
	end

	-- Friktionn, förklara linjär interpolation.
	x_speed = vmath.lerp(0.1, x_speed, 0)
	x_speed = x_speed + haeding * movement


	-- Hämta vår position
	position = go.get_position()
	position.x = position.x + x_speed * dt

	if position.x < 0 then
		position.x = 500
	elseif position.x > 500 then
		position.x = 0
	end

	-- Applicera positionen till detta objekt.
	go.set_position(position)

	-- Genom att ange en url till ett objekt kan vi hämta ett annat objekts position.
	world = go.get_position('world')

	-- Applicera motsatta y_speeden på world så den rör sig neråt när vi "rör" oss upp.
	world.y = world.y - (y_speed * dt)

	-- Sätt positionen av 'world'-objektet till vektorn world
	go.set_position(world, 'world')


	-- Gravitation
	y_speed = y_speed - (gravity)
end

function on_message(self, message_id, message, sender)
	-- contact_point_response skickas när 2 kinematic collision objects kolliderar
	if message_id == hash('contact_point_response') then

		-- message-objektet innehåller data om kollisionen, t.ex. vilken grupp vi kolliderade med.
		if message.other_group == hash('platform') then

			-- Vi måste falla för att kunna hoppa, vi ska kunna flyga upp igenom plattformarna men inte ner.
			if y_speed < 0 then

				-- Genom att sätta y_speeden till ett positivt värde "faller" vi uppåt, vilket är samma sak som att hoppa.
				y_speed = jump

				msg.post('#jump', 'play_sound')
			end
		elseif message.other_group == hash('jumper') then
			-- Vi måste falla för att kunna hoppa, vi ska kunna flyga upp igenom plattformarna men inte ner.
			if y_speed < 0 then

				-- Genom att sätta y_speeden till ett positivt värde "faller" vi uppåt, vilket är samma sak som att hoppa.
				y_speed = jump*3

				msg.post('#bounce', 'play_sound')
			end
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash('left') then
		if action.pressed then
			heading = -1
		elseif action.released and heading == -1 then
			heading = 0
		end
	elseif action_id == hash('right') then
		if action.pressed then
			heading = 1
		elseif action.released and heading == 1 then
			heading = 0
		end
	end
end
